{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/Country.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","classNames","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","Country","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","borderColor","fill","backgroundColor","barChart","label","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","vlaue","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2af62554.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__rBN2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__fqu1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1xNXL\",\"card\":\"Cards_card__1uXB_\",\"infected\":\"Cards_infected__-RFZI\",\"recovered\":\"Cards_recovered__3QI9T\",\"deaths\":\"Cards_deaths__dgv1U\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport classNames from 'classnames';\r\n\r\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) => {\r\n  if(!confirmed)\r\n  {\r\n    return 'Loading...';\r\n  }\r\n    return (\r\n        <div className={styles.container}>\r\n          {/* Infected people... */}\r\n          <Grid container spacing={3} justify=\"center\" >\r\n          <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.infected)}>\r\n          <CardContent>\r\n          <Typography color =\"textSecondary\" gutterBottom> Infected </Typography>\r\n          <Typography variant=\"h5\"> \r\n          <CountUp \r\n          start = {0}\r\n          end ={confirmed.value}\r\n          duration={2.5}\r\n          separator=\",\"\r\n          />\r\n           </Typography>\r\n          <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n          <Typography variant=\"body2\"> Number of active cases in Covid-19 </Typography>\r\n         </CardContent>\r\n          </Grid>\r\n\r\n          {/* Recovered people... */}\r\n          <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n          <Typography color =\"textSecondary\" gutterBottom> Recovered </Typography>\r\n          <Typography variant=\"h5\"> \r\n          <CountUp start = {0} end={recovered.value} duration={2.5} separator = \",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n          <Typography variant=\"body2\"> Number of recoveries from Covid-19 </Typography>\r\n         </CardContent>\r\n          </Grid>\r\n\r\n          {/* Deaths people... */}\r\n          <Grid item component={Card} xs={12} md={3} className={classNames(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n          <Typography color =\"textSecondary\" gutterBottom> Deaths </Typography>\r\n          <Typography variant=\"h5\"> <CountUp start = {0} end={deaths.value} duration={2.5} separator = \",\" /> </Typography>\r\n          <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n          <Typography variant=\"body2\"> Number of death caused by Covid-19 </Typography>\r\n         </CardContent>\r\n          </Grid>\r\n          </Grid>     \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n// import CountryPicker from '../components/CountryPicker/CountryPicker';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n    if(country)\r\n    {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl); \r\n\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async ()=> {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    }\r\n    catch(error)\r\n    {\r\n    }\r\n};\r\n\r\n// export const fetchDailyData = async () => {\r\n//     try {\r\n//       const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n//       return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n//     } catch (error) {\r\n//       return error;\r\n//     }\r\n//   };\r\n\r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((Country)=> Country.name);\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async() =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    \r\n    // Global chart...\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    labels: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n            },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    labels: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n            }],\r\n        }}        \r\n        />) : null\r\n    );\r\n    console.log(confirmed, recovered, deaths);\r\n// Bar chart....\r\n const barChart =(\r\n   confirmed ?(\r\n       <Bar \r\n       data = {{\r\n           labels: ['Infected', 'Recovered' , 'Deaths'],\r\n           datasets: [{\r\n               label: 'people',\r\n               backgroundColor: [\r\n                'rgba(0, 0, 225, 0.5)',\r\n                'rgba(0,225,0,0.5)',\r\n                'rgba(225, 0, 0,0.5)'\r\n               ],\r\n               data: [confirmed.value, recovered.value, deaths.value]\r\n           }]\r\n       }}\r\n       options={{\r\n           legend :{display:false},\r\n           title : {display:true , text:`Current state in ${country}`},\r\n       }}\r\n       />\r\n   ) : null\r\n );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './Country.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\n const CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        };\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange = {(e) => {handleCountryChange(e.target.value)}}>\r\n                <option vlaue=\" \">Global</option>\r\n                {fetchedCountries.map((country, i) =><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\n export default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component{\n  state = {\n    data:{},\n    country: '',\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data:fetchedData});\n  }\n\n  // event handler...\n  handleCountryChange = async(country)=> {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData , country: country});\n\n  }\n  render(){\n    const {data, country} = this.state;\n    return(\n      <div className= {styles.container}>\n      <Cards data = {data}/>\n      <Chart data = {data} country={country} />\n      <CountryPicker handleCountryChange ={this.handleCountryChange}/>\n      <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2yXiE\",\"image\":\"App_image__2KtM7\"};"],"sourceRoot":""}